{"version":3,"sources":["components/m_batismo/RetornaParoquia.js","components/m_batismo/LinhaTab.js","views/ui/m_batismo/InscBatismo.js","components/RemoveNull.js","components/m_batismo/Casados.js","components/m_batismo/TipoPartic.js","components/m_batismo/OptDatasBat.js"],"names":["RetornaParoquia","props","useState","data","setData","ender","process","id","useEffect","fetch","then","response","json","actualData","catch","err","console","log","message","nome","LinhaTab","dataselz","datasel","replaceAll","link","bordered","hover","map","item","index","scope","RemoveNull","nome_ele","nome_ela","Casados","casados","TipoPartic","tp","t_paticipacao","endereco","paroquia","cidade","Tables","onSubmitSignIn","a","queryString","state","variavel","substring","indexOf","urlParams","URLSearchParams","get","window","location","replace","onDataPChange","event","setState","datap","target","value","reload","hash","this","lg","tag","className","sm","name","type","onChange","OptDatasBat","color","onClick","React","Component","ehNull","label"],"mappings":"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","file":"static/js/7.a1dcdeb8.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nfunction RetornaParoquia(props) {\r\n    \r\n    const [data, setData] = useState([]);\r\n    const ender = process.env.REACT_APP_SERVER_TZ+'/paroquia/'+ props.id\r\n    //console.log('Endereço=>>', ender);\r\n    const fetchData = () => {\r\n        fetch(ender)\r\n        .then((response) => response.json())\r\n        .then((actualData) => {\r\n            //console.log(ender);\r\n            setData(actualData);\r\n            //console.log(data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []); \r\n    \r\n    return (\r\n        \r\n        <td>{data.nome}</td>\r\n                            \r\n    );\r\n}\r\n\r\nexport default RetornaParoquia;","import { useEffect, useState } from \"react\";\r\nimport {Table} from \"reactstrap\";\r\nimport RetornaParoquia from \"../m_batismo/RetornaParoquia\";\r\nimport RemoveNull from \"../RemoveNull\";\r\nimport Casados from \"../m_batismo/Casados\";\r\nimport TipoPartic from \"./TipoPartic\";\r\n\r\nfunction LinhaTab(props) {\r\n    \r\n    const dataselz = props.datasel.replaceAll(\"/\",\"-\");\r\n    const [data, setData] = useState([]);\r\n    const fetchData = () => {\r\n        const link = process.env.REACT_APP_SERVER_TZ;\r\n        fetch(link +'/participantes/'+ dataselz)\r\n        .then((response) => response.json())\r\n        .then((actualData) => {\r\n            //console.log(actualData);\r\n            setData(actualData);\r\n            //console.log(data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    \r\n    return (\r\n        <Table bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Nomes</th>\r\n                  <th>Casados?</th>\r\n                  <th>Tipo<br/>Participação</th>\r\n                  <th>Endereço</th>\r\n                  <th>Paróquia</th>\r\n                  <th>Cidade</th>\r\n                  \r\n                </tr>\r\n              </thead>\r\n                <tbody>\r\n                    {data.map((item, index) => (\r\n                        <tr>\r\n                            <th scope=\"row\">{item.id}</th>\r\n                            <td><RemoveNull nome={[item.nome_ele]}/><br/><br/>\r\n                            <RemoveNull nome={[item.nome_ela]}/></td>\r\n                            <td> <Casados casados={[item.casados]}/></td>\r\n                            <td> <TipoPartic tp={[item.t_paticipacao]}/></td>\r\n                            <td>{item.endereco}</td>\r\n                            <RetornaParoquia id={[item.paroquia]}/>\r\n                            <td>{item.cidade}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n    );\r\n}\r\n\r\nexport default LinhaTab;","import LinhaTab from \"../../../components/m_batismo/LinhaTab\";\r\nimport { Row, Col, Card, CardTitle, CardBody, FormGroup, Input, Button } from \"reactstrap\";\r\nimport OptDatasBat from \"../../../components/m_batismo/OptDatasBat\";\r\nimport React from 'react';\r\n\r\nclass Tables extends React.Component {\r\n  \r\n   constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        variavel: window.location.hash\r\n    }\r\n  }; \r\n\r\n  onSubmitSignIn = async () => {\r\n    const queryString = this.state.variavel.substring(this.state.variavel.indexOf('?'));\r\n    const urlParams = new URLSearchParams(queryString);\r\n    let data = urlParams.get('data')\r\n    if (data != null) {\r\n      data = data.replaceAll(\"-\",\"/\");\r\n    } else {\r\n      data = '-';  \r\n    }\r\n    //alert('Gerando PDF');\r\n    window.location.replace (process.env.REACT_APP_SERVER_APP+'/#/mostrapdf?data='+data);\r\n    //window.open(process.env.REACT_APP_SERVER_APP+'/#/mostrapdf', '_blank').focus();\r\n  }\r\n\r\n  onDataPChange = (event) => {\r\n    this.setState({datap: event.target.value});\r\n    const dataselz = event.target.value.replaceAll(\"/\",\"-\");\r\n    console.log(process.env.REACT_APP_SERVER_APP+\"/#/InscBatismo?data=\"+dataselz)\r\n    window.location.replace (process.env.REACT_APP_SERVER_APP+\"/#/InscBatismo?data=\"+dataselz);\r\n    window.location.reload();\r\n  };\r\n  \r\n  \r\n  \r\n  render() {\r\n    const queryString = this.state.variavel.substring(this.state.variavel.indexOf('?'));\r\n    const urlParams = new URLSearchParams(queryString);\r\n    let data = urlParams.get('data')\r\n    if (data != null) {\r\n      data = data.replaceAll(\"-\",\"/\");\r\n    } else {\r\n      data = '-';  \r\n    }\r\n    return (\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <Card>\r\n            <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n              <FormGroup>\r\n                    <i className=\"bi bi-card-text me-2\"> </i>\r\n                    Lista de Participantes de Preparação do Batismo<br/><br/>\r\n                    <Row>\r\n                        <Col sm={3}>\r\n                            <Input id=\"dataSelect\" name=\"datapart\" type=\"select\" onChange={this.onDataPChange}>\r\n                            <option value={data}>{data}</option>\r\n                              <OptDatasBat />\r\n                            </Input>\r\n                        </Col>\r\n\r\n                        <Col sm={3}>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={this.onSubmitSignIn}\r\n                            type=\"submit\"\r\n                            value=\"Enviar\"\r\n                          >Gerar PDF</Button>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                  </FormGroup>\r\n            </CardTitle>\r\n            <CardBody className=\"\">\r\n                  \r\n                  <LinhaTab datasel={data} />\r\n              \r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tables;\r\n","\r\n\r\nfunction RemoveNull(props) {\r\n    const ehNull = props.nome;\r\n    if (ehNull !== 'null') {\r\n        return (ehNull); \r\n    }  \r\n        return (<center>-</center>);\r\n    }\r\n\r\nexport default RemoveNull;","\r\n\r\nfunction Casados(props) {\r\n    const casados = props.casados;\r\n    //alert(casados);\r\n    if (casados === '1') {\r\n        return ('Sim') \r\n    } else\r\n        return ('Não') \r\n    }\r\n\r\nexport default Casados;","\r\n\r\nfunction TipoPartic(props) {\r\n    const tp = props.tp;\r\n    if (tp === '1') {\r\n        return ('Pais'); \r\n    }  \r\n        return ('Padrinhos'); \r\n    }\r\n\r\nexport default TipoPartic;","import { useEffect, useState } from \"react\";\r\n\r\nfunction OptDatasBat() {\r\n    \r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchData = () => {\r\n        fetch(process.env.REACT_APP_SERVER_TZ+'/datasbat')\r\n        .then((response) => response.json())\r\n        .then((actualData) => {\r\n            //console.log(actualData);\r\n            setData(actualData);\r\n            //console.log(data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    \r\n    return (\r\n        \r\n         <optgroup label=\"Selecione a data\">\r\n            \r\n                    {data.map((item, index) => (\r\n                        //<option value={item.id}>{item.id}</option>\r\n                        //<option value={item.id}>{new Date(item.data).toLocaleTimeString('pt-BR')}</option>\r\n                        //<option value={item.id}>{\"0\"+new Date(item.data).getDay()+\"/\"+new Date(item.data).getMonth()+\"/\"+new Date(item.data).getYear()}</option>\r\n                        <option value={item.data}>{item.data}</option>\r\n                    ))}\r\n        </optgroup>\r\n    );\r\n}\r\n\r\nexport default OptDatasBat;"],"sourceRoot":""}