{"version":3,"sources":["components/UserSys.js","views/ui/GestUsers.js","components/RemoveNull.js"],"names":["UserSys","useState","data","setData","open","setOpen","handleClose","handleOpen","mess","setMess","handleMess","pMess","r_paro","numz","JSON","stringify","useEffect","fetch","process","then","response","json","actualData","catch","err","console","log","message","toggle","isOpen","backdrop","color","onClick","window","location","replace","reload","bordered","hover","map","item","index","scope","id","RemoveNull","nome","login","email","perm","aprov","to","dataid","class","title","Tables","props","onDataPChange","event","setState","datap","target","value","onSubmitSignIn","a","state","trim","replaceAll","method","headers","body","alert","variavel","hash","lg","tag","className","React","Component","ehNull"],"mappings":"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","file":"static/js/10.8a103ccd.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport {Table, Modal, ModalHeader, ModalBody, ModalFooter, Button} from \"reactstrap\";\r\nimport RemoveNull from \"../components/RemoveNull\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction UserSys() {\r\n    \r\n    const [data, setData, test] = useState([]);\r\n\r\n    //Rotina para fechar e abrir modal\r\n    const [open, setOpen] = useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    //Rotina para passar mensagem\r\n    const [mess, setMess] = useState('Conteúdo');\r\n    const handleMess = (pMess) => {\r\n        setMess(pMess);\r\n    };\r\n\r\n    const fetchData = () => {\r\n        fetch(process.env.REACT_APP_SERVER_TZ+'/usersys')\r\n        .then((response) => response.json())\r\n        .then((actualData) => {\r\n            setData(actualData);\r\n\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    \r\n    function r_aprov (numz) {\r\n        numz = JSON.stringify(numz);\r\n        numz = numz[1];\r\n        if (numz !== '1'){\r\n                return 'Não';\r\n            } else {\r\n                return 'Sim';\r\n            };\r\n    }\r\n\r\n    function r_paro (numz) {\r\n        numz = JSON.stringify(numz);\r\n        numz = numz[1]\r\n        switch (numz) {\r\n            case '0':\r\n                return 'Administrador';\r\n            case '1':\r\n                return \"Batismo\";\r\n            case '2':\r\n                return \"PASCOM\";\r\n            case '3':\r\n                return \"ECC\";\r\n            case '4':\r\n                return \"Dízimo\";\r\n            default:\r\n                return \"Nada\";\r\n          };\r\n    }\r\n\r\n    const apaga = (dataid) => {\r\n        handleOpen();\r\n        handleMess('Usuário Excluído!')\r\n        fetch(process.env.REACT_APP_SERVER_TZ+'/deleta_user/'+dataid)\r\n        .then((response) => response.json())\r\n      };\r\n\r\n      const autoriza = (dataid) => {\r\n        handleMess('Permissão concedida ao usuário!')\r\n        handleOpen();\r\n        fetch(process.env.REACT_APP_SERVER_TZ+'/autoriza_user/'+dataid)\r\n        .then((response) => response.json())\r\n      };\r\n\r\n      const atualiza = () => {\r\n        \r\n        window.location.replace (process.env.REACT_APP_SERVER_APP+'/#/GestUsers');\r\n        window.location.reload(false);\r\n      };\r\n\r\n\r\n    return (\r\n       \r\n        \r\n        <div>\r\n            <div>\r\n                <Modal toggle={handleClose} isOpen={open}  backdrop=\"static\">\r\n                    <ModalHeader toggle={handleClose}>Alerta!</ModalHeader>\r\n                    <ModalBody>\r\n                        {mess}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" onClick={atualiza}>OK</Button>{' '}\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n            \r\n            <Table bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>Login</th>\r\n                    <th>Nome</th>\r\n                    <th>Email</th>\r\n                    <th>Pastoral</th>\r\n                    <th>Aprovado?</th>\r\n                    <th>Ações</th>\r\n                    \r\n                    </tr>\r\n                </thead>\r\n                    <tbody>\r\n                        {data.map((item, index) => (\r\n                            <tr>\r\n                                <th scope=\"row\">{item.id}</th>\r\n                                <td><RemoveNull nome={[item.login]}/></td>\r\n                                <td><RemoveNull nome={[item.nome]}/></td>\r\n                                <td><RemoveNull nome={[item.email]}/></td>\r\n                                <td>{r_paro([item.perm])}</td>\r\n                                <td>{r_aprov([item.aprov])}</td>\r\n                                <td><Link to=\"\" onClick={() => apaga(item.id)}>\r\n                                        <i class=\"bi bi-person-x-fill\" title='Excluir Usuário'></i>\r\n                                    </Link>\r\n                                    &nbsp;&nbsp;\r\n                                    <Link to=\"\" onClick={() => autoriza(item.id)}>\r\n                                        <i class=\"bi bi-person-check-fill\" title='Aprova Usuário'></i>\r\n                                    </Link>\r\n                                    \r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n            </Table>\r\n        </div>\r\n\r\n         \r\n    );\r\n}\r\n\r\nexport default UserSys;","import UserSys from \"../../components/UserSys\";\r\nimport { Row, Col, Card, CardTitle, CardBody, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport React from 'react';\r\n\r\nclass Tables extends React.Component {\r\n  \r\n   constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        variavel: window.location.hash,\r\n        datap: ''\r\n    }\r\n  }; \r\n\r\n  onDataPChange = (event) => {\r\n    this.setState({datap: event.target.value})\r\n  };\r\n\r\n  onSubmitSignIn = async () => {\r\n    \r\n    let data = this.state.datap.trim();\r\n    if (data != null) {\r\n      data = data.replaceAll(\"-\",\"/\");\r\n      const link = process.env.REACT_APP_SERVER_TZ+'/register_dt';\r\n      //alert(link);\r\n      await fetch(link, {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n            datap: this.state.datap\r\n        })\r\n    }).then(alert(\"Data Cadastrada com Sucesso!\"))\r\n      .then(response => {response.json()\r\n      //console.log(response.users[0])\r\n      window.location.replace(process.env.REACT_APP_SERVER_APP+'/#/CadastroDatas');\r\n      window.location.reload();\r\n    })\r\n    } else {\r\n      data = '-';  \r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n        \r\n          <Row>\r\n            <Col lg=\"12\">\r\n              <Card>\r\n                <CardTitle tag=\"h6\" className=\"border-bottom p-3 mb-0\">\r\n                <h3>\r\n                <i class=\"bi bi-people-fill\"></i>{'  '}Gestão de Usuários\r\n                  </h3>\r\n                </CardTitle>\r\n                <CardBody className=\"\">\r\n                      \r\n                      <UserSys />\r\n                  \r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tables;\r\n","\r\n\r\nfunction RemoveNull(props) {\r\n    const ehNull = props.nome;\r\n    if (ehNull !== 'null') {\r\n        return (ehNull); \r\n    }  \r\n        return (<center>-</center>);\r\n    }\r\n\r\nexport default RemoveNull;"],"sourceRoot":""}